# Файл nginx.conf
server {
  # Указание серверу: слушай порт контейнера 80
  listen 80;

  # Запросы по адресам /api/... перенаправляй в контейнер backend
  location /api/ {
    # Полученный запрос отправь по протоколу http в контейнер backend
    # на порт 8000 — именно его слушает Gunicorn
    proxy_pass http://backend:8000/api/;
  }
  # Так же поступай и с запросами к адресам /admin/...
  location /admin/ {
    proxy_pass http://backend:8000/admin/;
  }

  # По запросу к главной странице проекта должно открыться фронтенд-приложение.
  # Все его файлы должны лежать в приложении со статикой 
  location / {
    # Всю статику будем искать в папке /staticfiles/.
    # В ней будет доступна статика фронтенда и статика бэкенда.
    # Инструкция alias указывает, где лежат
    # статические файлы, которые должен раздавать Nginx
    alias /staticfiles/;
    # Если в запросе не указано, какой файл вернуть, 
    # возвращай файл index.html — он есть в папке со статикой
    index index.html;
  }
}
# Файл docker-compose.yml
version: '3'

volumes:
  pg_data:

services:
  db:
    image: postgres:13.10
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data
  backend:
    build: ./backend/
    env_file: .env
    depends_on:
      - db
  frontend:
    env_file: .env
    build: ./frontend/
# Добавляем новый контейнер: gateway
  gateway:
    # Сбилдить и запустить образ, 
    # описанный в Dockerfile в папке gateway
    build: ./gateway/
    # Ключ ports устанавливает
    # перенаправление всех запросов с порта 8000 хоста
    # на порт 80 контейнера
    ports:
      - 8000:80